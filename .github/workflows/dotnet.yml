name: Build, Test & Publish

on:
  push:
    paths:
    - 'src/**'
    - '.github/workflows/**'
    branches: [ main ]
  pull_request:
    paths:
    - 'src/**'
    branches: [ main ]

jobs:
  build:

    runs-on: ${{ matrix.os }}

    permissions:
      checks: write

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET Core 3.1	
      uses: actions/setup-dotnet@v3
      with:	
        dotnet-version: 3.1.x
    - name: Setup .NET 6
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      working-directory: ./src
      run: dotnet restore
    - name: Build
      working-directory: ./src
      run: dotnet build --configuration Release --no-restore
    - name: Test
      working-directory: ./src
      run: |
        dotnet test --configuration Release --no-restore --no-build --verbosity normal --logger trx || true
    - name: Test Report
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: 'DotNET Tests ${{ matrix.os }}'
        path: "**/*.trx"                            
        reporter: dotnet-trx
        fail-on-error: true
    - name: Build project and generate NuGet package
      if: matrix.os == 'ubuntu-latest'
      run: |
        dotnet pack --configuration Release --output $GITHUB_WORKSPACE/out src/Nager.TcpClient/Nager.TcpClient.csproj
    - name: Push NuGet package
      if: github.event_name != 'pull_request' && matrix.os == 'ubuntu-latest'
      run: |
        cd $GITHUB_WORKSPACE/out
        dotnet nuget push *.nupkg --source https://www.nuget.org/api/v2/package --api-key ${{secrets.NUGET_TOKEN}} --skip-duplicate --no-symbols
